<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbpm.mapper.contact.ContactDepartmentBaseMapper">
  <resultMap id="BaseResultMap" type="com.hbpm.model.contact.ContactDepartmentEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from contact_department
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hbpm.model.contact.ContactDepartmentEntity">
    insert into contact_department (id, tenant_id, `name`
      )
    values (#{id,jdbcType=BIGINT}, #{tenantId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.hbpm.model.contact.ContactDepartmentEntity">
    update contact_department
    set tenant_id = #{tenantId,jdbcType=BIGINT},
      `name` = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, tenant_id, `name`
    from contact_department
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, tenant_id, `name`
    from contact_department
  </select>
  <delete id="batchDeleteByPrimaryKey">
    delete from contact_department where id in 
    <foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">
      #{id,jdbcType=BIGINT}
    </foreach>
  </delete>
  <insert id="batchInsert" parameterType="com.hbpm.model.contact.ContactDepartmentEntity">
    insert into contact_department (id, tenant_id, `name`)
    <foreach close=")" collection="entityList" index="index" item="entity" open="(" separator=",">
      #{id,jdbcType=BIGINT}, #{tenantId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR})
    </foreach>
  </insert>
</mapper>